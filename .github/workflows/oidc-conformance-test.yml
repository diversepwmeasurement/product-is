jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        path: ./product-is
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.18+10
    - continue-on-error: true
      name: Setup Python
      run: 'python3 -m pip install --upgrade pip setuptools wheel

        pip3 install psutil

        pip3 install httpx

        pip3 install httplib2

        '
    - continue-on-error: true
      name: Download IS zip
      run: "INPUT_URL=${{github.event.inputs.download-url}}\nINPUT_TAG=${{github.event.inputs.tag}}\n\
        if [ \"${{ github.event_name }}\" == \"workflow_dispatch\" ]; then\n  if [[\
        \ -z \"${INPUT_URL}\" ]] && [[ -z \"${INPUT_TAG}\" ]]; then\n    echo \"Either\
        \ 'tag' or 'download-url' must be provided.\"\n    exit 1\n  fi\nfi\nif [[\
        \ -z \"${INPUT_URL}\" ]]; then\n  owner=\"wso2\"\n  repo=\"product-is\"\n\
        \  if [[ -z \"${INPUT_TAG}\" ]]; then\n    tag=${GITHUB_REF:10}\n    tag_trimmed=${tag//\
        \ }\n  else\n    tag=${{github.event.inputs.tag}}\n    tag_trimmed=${tag//\
        \ }\n  fi\n\n  artifact=\"wso2is-${tag_trimmed:1}.zip\"\n  echo \"Tag=$tag\"\
        \n  echo \"Artifact=$artifact\"\n  list_asset_url=\"https://api.github.com/repos/${owner}/${repo}/releases/tags/${tag_trimmed}\"\
        \n  asset_url=$(curl \"${list_asset_url}\" | jq \".assets[] | select(.name==\\\
        \"${artifact}\\\") | .url\" | sed 's/\\\"//g')\n  curl -vLJO -H 'Accept: application/octet-stream'\
        \ \\\n   \"${asset_url}\"\nelse\n  curl -vLJO -H 'Accept: application/octet-stream'\
        \ \\\n   \"${INPUT_URL}\"\nfi\n"
    - continue-on-error: true
      name: Clone conformance suite
      run: "sudo snap install jq\nLATEST_RELEASE_BRANCH=$(curl -s https://gitlab.com/api/v4/projects/4175605/releases/\
        \ | jq '.[]' | jq -r '.name' | head -1)\necho \">>> Conformance suite latest\
        \ release branch: $LATEST_RELEASE_BRANCH\"\nPROVIDED_VERSION=${{github.event.inputs.conformance-suite-version}}\n\
        if [[ -z \"${PROVIDED_VERSION}\" ]]; then\n      CONFORMANCE_SUITE_BRANCH=$LATEST_RELEASE_BRANCH\n\
        \      echo \">>> Conformance suite latest release branch is taken: $CONFORMANCE_SUITE_BRANCH\"\
        \n    else\n      CONFORMANCE_SUITE_BRANCH=$PROVIDED_VERSION\n      echo \"\
        >>> Conformance suite provided branch is taken: $CONFORMANCE_SUITE_BRANCH\"\
        \n    fi\necho \">>> Selected conformance suite branch: $CONFORMANCE_SUITE_BRANCH\"\
        \ngit clone --depth 1 --branch ${CONFORMANCE_SUITE_BRANCH} https://gitlab.com/openid/conformance-suite.git\n"
    - continue-on-error: true
      name: Adding extra hosts to docker-compose-dev.yml
      run: sed -i '/^    volumes.*/i \ \ \ \ extra_hosts:\n \ \ \ \ - "localhost:\$IP\"'
        ./conformance-suite/docker-compose-dev.yml
    - continue-on-error: true
      name: Run IS
      run: 'PRODUCT_IS_ZIP=$(find ./ -name wso2is* -type f -printf "%f\n")

        cd ./product-is/oidc-conformance-tests

        python3 ./configure_is.py ../../$PRODUCT_IS_ZIP

        '
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      name: Run Conformance Suite
      run: "DOCKER_COMPOSE_FILE=./docker-compose-dev.yml\ncd conformance-suite\nIP=$(/sbin/ip\
        \ -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)\nexport IP\necho\
        \ \"Host ip: \" \nprintenv IP\nmvn clean package\npython3 ../product-is/oidc-conformance-tests/start_conformance_suite.py\
        \ $DOCKER_COMPOSE_FILE\n"
    - continue-on-error: true
      name: Run Tests
      run: bash ./product-is/oidc-conformance-tests/test_runner.sh
    - continue-on-error: true
      name: Test Results
      run: "IS_SUCCESSFUL=false\nif python3 ./product-is/oidc-conformance-tests/export_results.py\
        \ https://localhost:8443\nthen\n  IS_SUCCESSFUL=true\nfi\nif $IS_SUCCESSFUL\n\
        then\n  echo \"======================\"\n  echo \"All Test Cases Passed!\"\
        \n  echo \"======================\"\n  exit 0\nelse      \n  echo \"=============================================\"\
        \n  echo \"Failed Test Cases Found. Exiting with Failure\"\n  echo \"=============================================\"\
        \n  exit 1\nfi\n"
    - continue-on-error: true
      if: always()
      name: Archive test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: ./*test_results.zip
    - continue-on-error: true
      if: always()
      name: Archive test logs
      uses: actions/upload-artifact@v2
      with:
        name: test-logs
        path: ./*log.txt
    - continue-on-error: true
      if: always()
      name: Send Email
      run: "INPUT=${{github.event.inputs.send-email}}\nif [[ -z \"${INPUT}\" ]]; then\n\
        \  INPUT=\"no\"\nfi\nSEND_EMAIL=${INPUT^^}\nif [ $SEND_EMAIL == \"YES\" ];\
        \ then\n  echo \"=============\"\n  echo \"Sending Email\"\n  echo \"=============\"\
        \n  CONFORMANCE_SUITE_URL=https://localhost:8443\n  RESOURCE=${{github.event.inputs.download-url}}\n\
        \  if [[ -z \"${RESOURCE}\" ]]; then\n    RESOURCE=${{github.event.inputs.tag}}\n\
        \  fi\n  python3 ./product-is/oidc-conformance-tests/send_email.py $CONFORMANCE_SUITE_URL\
        \ $GITHUB_RUN_NUMBER ${{job.status}} ${{github.repository}} ${{github.run_id}}\
        \ ${{secrets.SENDER_EMAIL}} ${{secrets.PASSWORD}} ${{secrets.RECEIVER_LIST}}\
        \ $RESOURCE\nelif [ $SEND_EMAIL == \"NO\" ]; then\n  echo \"========================================\"\
        \n  echo \"Skipped Sending Email\"\n  echo \"========================================\"\
        \nelse\n  echo \"=================================================================\"\
        \n  echo \"Invalid parameter value. Skipped sending email\"\n  echo \"=================================================================\"\
        \nfi\n"
    - continue-on-error: true
      if: always()
      name: Send Chat message
      run: "INPUT=${{github.event.inputs.send-chat}}\nRESOURCE=${{github.event.inputs.download-url}}\n\
        if [[ -z \"${RESOURCE}\" ]]; then\n  RESOURCE=${{github.event.inputs.tag}}\n\
        fi\nif [[ -z \"${INPUT}\" ]]; then\n  INPUT=\"yes\"\nfi\nSEND_CHAT=${INPUT^^}\n\
        if [ $SEND_CHAT == \"YES\" ]; then\n  echo \"===========================\"\
        \n  echo \"Sending Google Chat Message\"\n  echo \"===========================\"\
        \n  CONFORMANCE_SUITE_URL=https://localhost:8443\n  python3 ./product-is/oidc-conformance-tests/send_chat.py\
        \ \"$CONFORMANCE_SUITE_URL\" \"$GITHUB_RUN_NUMBER\" \"${{job.status}}\" \"\
        ${{github.repository}}\" \"${{github.run_id}}\" \"${{secrets.GOOGLE_CHAT_WEBHOOK_OIDC_TEST}}\"\
        \ \"$RESOURCE\" \"OIDC Conformance Test\"\nelif [ $SEND_CHAT == \"NO\" ];\
        \ then\n  echo \"========================================\"\n  echo \"Skipped\
        \ Sending Google Chat Message\"\n  echo \"========================================\"\
        \nelse\n  echo \"=================================================================\"\
        \n  echo \"Invalid parameter value. Skipped sending google chat message\"\n\
        \  echo \"=================================================================\"\
        \nfi\n"
name: OIDC Conformance Test
on:
  repository_dispatch:
    types: trigger-ga___oidc-conformance-test.yml
