jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        path: ./product-is
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.18+10
    - continue-on-error: true
      name: Setup Python
      run: 'python3 -m pip install --upgrade pip setuptools wheel

        pip3 install psutil

        pip3 install httpx

        pip3 install httplib2

        '
    - continue-on-error: true
      name: Get IS zip
      run: "INPUT_TAG=${{github.event.inputs.tag}}\nif [[ -z \"${INPUT_TAG}\" ]];\
        \ then\n  echo \">>> Building IS from source...\"\n  mkdir cloned-product-is\n\
        \  cd cloned-product-is\n  git clone https://github.com/wso2/product-is\n\
        \  cd product-is\n  mvn clean install -Dmaven.test.skip=true | tee mvn-build.log\n\
        \n  REPO_BUILD_STATUS=$(cat mvn-build.log | grep \"\\[INFO\\] BUILD\" | grep\
        \ -oE '[^ ]+$')\n  echo \"===========================================================\"\
        \n  echo \"BUILD $REPO_BUILD_STATUS\"\n  echo \"==========================================================\"\
        \n\n  if [[ \"${REPO_BUILD_STATUS}\" != \"SUCCESS\" ]]; then\n    exit 1\n\
        \  fi\n\n  zip_file=$(find . -name 'wso2is-*.zip' -type f -not -name 'wso2is-*-src.zip'\
        \ -print -quit)\n\n  if [[ -z \"$zip_file\" ]]; then\n    echo \"Zip file\
        \ not found\"\n    exit 1\n  fi\n\n  echo \">>> Zip file found: $zip_file\"\
        \n  echo \">>> Copying zip file to the root directory ...\"\n\n  cp \"$zip_file\"\
        \ ./../../\n  cd ../..\n  ls\n  echo \">>> Remove cloned-product-is directory\"\
        \n  rm -rf cloned-product-is\n  ls\nelse\n  owner=\"wso2\"\n  repo=\"product-is\"\
        \n  if [[ -z \"${INPUT_TAG}\" ]]; then\n    tag=${GITHUB_REF:10}\n    tag_trimmed=${tag//\
        \ }\n  else\n    tag=${{github.event.inputs.tag}}\n    tag_trimmed=${tag//\
        \ }\n  fi\n\n  artifact=\"wso2is-${tag_trimmed:1}.zip\"\n  echo \"Tag=$tag\"\
        \n  echo \"Artifact=$artifact\"\n  list_asset_url=\"https://api.github.com/repos/${owner}/${repo}/releases/tags/${tag_trimmed}\"\
        \n  asset_url=$(curl \"${list_asset_url}\" | jq \".assets[] | select(.name==\\\
        \"${artifact}\\\") | .url\" | sed 's/\\\"//g')\n  curl -vLJO -H 'Accept: application/octet-stream'\
        \ \\\n    \"${asset_url}\"\nfi\n"
    - continue-on-error: true
      name: Add deployment toml configs to IS
      run: 'PRODUCT_IS_ZIP=$(find ./ -name ''wso2is*'' -type f -printf "%f\n")

        echo ">>> Unzipping Product IS: ${PRODUCT_IS_ZIP} ..."

        unzip -qq ${PRODUCT_IS_ZIP}


        PRODUCT_IS=$(find ./ -maxdepth 1 -name ''wso2is*'' -type d -printf "%f\n")


        echo ">>> Adding deployment-fapi-config.toml configs to deployment.toml..."

        cp -f ./product-is/oidc-fapi-conformance-tests/config/deployment-fapi-config.toml
        $PRODUCT_IS/repository/conf/deployment.toml


        echo ">>> Zipping $PRODUCT_IS to $PRODUCT_IS_ZIP"

        zip -qq -r $PRODUCT_IS_ZIP $PRODUCT_IS

        rm -r $PRODUCT_IS

        '
    - continue-on-error: true
      name: Clone conformance suite
      run: "sudo snap install jq\nLATEST_RELEASE_BRANCH=$(curl -s https://gitlab.com/api/v4/projects/4175605/releases/\
        \ | jq '.[]' | jq -r '.name' | head -1)\necho \">>> Conformance suite latest\
        \ release branch: $LATEST_RELEASE_BRANCH\"\nPROVIDED_VERSION=${{github.event.inputs.conformance-suite-version}}\n\
        if [[ -z \"${PROVIDED_VERSION}\" ]]; then\n      CONFORMANCE_SUITE_BRANCH=$LATEST_RELEASE_BRANCH\n\
        \      echo \">>> Conformance suite latest release branch is taken: $CONFORMANCE_SUITE_BRANCH\"\
        \n    else\n      CONFORMANCE_SUITE_BRANCH=$PROVIDED_VERSION\n      echo \"\
        >>> Conformance suite provided branch is taken: $CONFORMANCE_SUITE_BRANCH\"\
        \n    fi\necho \">>> Selected conformance suite branch: $CONFORMANCE_SUITE_BRANCH\"\
        \ngit clone --depth 1 --branch ${CONFORMANCE_SUITE_BRANCH} https://gitlab.com/openid/conformance-suite.git\n"
    - continue-on-error: true
      name: Adding extra hosts to docker-compose.yml and adding iam as a localhost
        to /etc/hosts
      run: 'sed -i ''/^    volumes.*/i \ \ \ \ extra_hosts:\n \ \ \ \ - "localhost:\$IP\"\n
        \ \ \ \ - "iam:\$IP\"'' ./conformance-suite/docker-compose-dev.yml

        sed -i ''/^    volumes.*/i \ \ \ \ extra_hosts:\n \ \ \ \ - "localhost:\$IP\"\n
        \ \ \ \ - "iam:\$IP\"'' ./conformance-suite/docker-compose.yml

        sudo -- sh -c -e "echo ''127.0.1.1 iam'' >> /etc/hosts"

        sudo -- sh -c -e "echo ''127.0.1.1 www.iam.com'' >> /etc/hosts"

        '
    - continue-on-error: true
      name: Start FAPI resource server
      run: 'sudo apt update

        sudo apt install nginx

        echo ">>> NGINX installed successfully !"

        sudo chmod 777 -R /etc/nginx

        echo ">>> Permission changed for /etc/nginx"

        mkdir -p /etc/nginx/ssl

        echo ">>> /etc/nginx/ssl created successfully!"


        sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/serverCA.key
        -out /etc/nginx/ssl/serverCA.crt -subj "/C=US/ST=California/L=San Francisco/O=My
        Company/OU=IT Department/CN=mycompany.com"

        echo ">>> FAPI resource server keys saved successfully!"


        cd product-is/oidc-fapi-conformance-tests/resource-server

        cp -f nginx-proxy /etc/nginx/sites-enabled

        sudo nginx -t

        sudo service nginx restart

        echo ">>> NGINX reverse proxy server started successfully!"


        pip install virtualenv

        python3 -m virtualenv venv

        source ./venv/bin/activate

        pip install -r requirements.txt

        echo ">>> FAPI resource server starting..."

        . ./venv/bin/activate

        nohup python3 resource-server.py > resource-server.log &

        sleep 5

        cat resource-server.log

        '
    - continue-on-error: true
      name: Configure IS and Conformance Suite and run IS
      run: 'PRODUCT_IS_ZIP=$(find ./ -name wso2is* -type f -printf "%f\n")

        cd ./product-is/oidc-fapi-conformance-tests

        python3 ./configure_is_fapi.py ../../$PRODUCT_IS_ZIP

        '
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      name: Start Conformance Suite server
      run: "DOCKER_COMPOSE_FILE=./docker-compose.yml\ncd conformance-suite\nIP=$(/sbin/ip\
        \ -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)\nexport IP\necho\
        \ \">>> Host ip: \" \nprintenv IP\nmvn clean package\npython3 ../product-is/oidc-fapi-conformance-tests/start_conformance_suite.py\
        \ $DOCKER_COMPOSE_FILE\n"
    - continue-on-error: true
      name: Run Tests
      run: bash ./product-is/oidc-fapi-conformance-tests/test_runner_fapi.sh
    - continue-on-error: true
      name: Test Results
      run: "IS_SUCCESSFUL=false\nif python3 ./product-is/oidc-fapi-conformance-tests/export_results_fapi.py\
        \ https://localhost:8443\nthen\n  IS_SUCCESSFUL=true\nfi\nif $IS_SUCCESSFUL\n\
        then\n  echo \"======================\"\n  echo \"All Test Cases Passed!\"\
        \n  echo \"======================\"\n  exit 0\nelse      \n  echo \"=============================================\"\
        \n  echo \"Failed Test Cases Found. Exiting with Failure\"\n  echo \"=============================================\"\
        \n  exit 1\nfi\n"
    - continue-on-error: true
      if: always()
      name: Archive test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: ./*test_results.zip
    - continue-on-error: true
      if: always()
      name: Archive test logs
      uses: actions/upload-artifact@v2
      with:
        name: test-logs
        path: ./*log.txt
    - continue-on-error: true
      if: always()
      name: Send Email
      run: "INPUT=${{github.event.inputs.send-email}}\nif [[ -z \"${INPUT}\" ]]; then\n\
        \  INPUT=\"no\"\nfi\nSEND_EMAIL=${INPUT^^}\nif [ $SEND_EMAIL == \"YES\" ];\
        \ then\n  echo \"=============\"\n  echo \"Sending Email\"\n  echo \"=============\"\
        \n  CONFORMANCE_SUITE_URL=https://localhost:8443\n  INPUT_TAG=${{github.event.inputs.tag}}\n\
        \  if [[ -z \"${INPUT_TAG}\" ]]; then\n    RESOURCE=\"built-from-latest-source\"\
        \n  else\n    RESOURCE=${{github.event.inputs.tag}}\n  fi\n  RECEIVER_LIST=${{secrets.FAPI_RECEIVER_LIST}}\n\
        \  if [[ -z \"${RECEIVER_LIST}\" ]]; then\n    RECEIVER_LIST=${{secrets.RECEIVER_LIST}}\n\
        \  fi\n  python3 ./product-is/oidc-conformance-tests/send_email.py $CONFORMANCE_SUITE_URL\
        \ $GITHUB_RUN_NUMBER ${{job.status}} ${{github.repository}} ${{github.run_id}}\
        \ ${{secrets.SENDER_EMAIL}} ${{secrets.PASSWORD}} ${{secrets.FAPI_RECEIVER_LIST}}\
        \ $RESOURCE\nelif [ $SEND_EMAIL == \"NO\" ]; then\n  echo \"========================================\"\
        \n  echo \"Skipped Sending Email\"\n  echo \"========================================\"\
        \nelse\n  echo \"=================================================================\"\
        \n  echo \"Invalid parameter value. Skipped sending email\"\n  echo \"=================================================================\"\
        \nfi\n"
    - continue-on-error: true
      if: always()
      name: Send Chat message
      run: "INPUT=${{github.event.inputs.send-chat}}\nif [[ -z \"${INPUT}\" ]]; then\n\
        \  INPUT=\"yes\"\nfi\n\nINPUT_TAG=${{github.event.inputs.tag}}\n  if [[ -z\
        \ \"${INPUT_TAG}\" ]]; then\n    RESOURCE=\"built from latest source\"\n \
        \ else\n    RESOURCE=${{github.event.inputs.tag}}\n  fi\n\nSEND_CHAT=${INPUT^^}\n\
        if [ $SEND_CHAT == \"YES\" ]; then\n  echo \"===========================\"\
        \n  echo \"Sending Google Chat Message\"\n  echo \"===========================\"\
        \n  CONFORMANCE_SUITE_URL=https://localhost:8443\n  python3 ./product-is/oidc-conformance-tests/send_chat.py\
        \ \"$CONFORMANCE_SUITE_URL\" \"$GITHUB_RUN_NUMBER\" \"${{job.status}}\" \"\
        ${{github.repository}}\" \"${{github.run_id}}\" \"${{secrets.GOOGLE_CHAT_WEBHOOK_OIDC_TEST}}\"\
        \ \"$RESOURCE\" \"FAPI OIDC Conformance Test\"\nelif [ $SEND_CHAT == \"NO\"\
        \ ]; then\n  echo \"========================================\"\n  echo \"\
        Skipped Sending Google Chat Message\"\n  echo \"========================================\"\
        \nelse\n  echo \"=================================================================\"\
        \n  echo \"Invalid parameter value. Skipped sending google chat message\"\n\
        \  echo \"=================================================================\"\
        \nfi\n"
name: FAPI OIDC Conformance Test
on:
  repository_dispatch:
    types: trigger-ga___fapi-oidc-conformance-test.yml
